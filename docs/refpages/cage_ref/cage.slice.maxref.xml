<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="cage.slice" module="cage" kind="patcher">

	<digest>
		Slice roll
	</digest>

	<description>
		Splits a <o>bach.roll</o> into segments.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">cageproject</metadata>
		<metadata name="tag">cage</metadata>
		<metadata name="tag">cage scores</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Original roll
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				Sliced rolls
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="slice_points" optional="1" type="llll">
			<digest>
				Slice points
			</digest>
			<description>
				The optional argument sets the initial value for the slice points (default: null).
				Also see <m>llll</m> method to know more.
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Output sliced rolls
			</digest>
			<description>
				Outputs result of the last slicing.
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				Slice roll
			</digest>
			<description>
				An <m>llll</m> in the first inlet is considered as the gathered syntax of the original roll.
				Such roll is cut at the given slice points (time instants, see infra) into a sequence of other rolls, whose
				gathered syntax is collected and output through the outlet in the form: <b>[<m>ROLL1</m>] [<m>ROLL2</m>]...</b>.
				The output header content is the same as the input header content. <br />
				An <m>llll</m> in the second inlet sets the time instants at which the roll content has to be sliced.
				If such <m>llll</m> is <b>null</b> (default), the existing markers (if any) will be used for slicing.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="endmarker" get="1" set="1" type="int" size="1">
			<digest>
				Add End Marker
			</digest>
			<description>
				Add an ending marker for each sliced segment.
				This can be useful if <o>cage.slice</o> is used in conjunction with
				<o>cage.join</o>. Defaults to 0.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Add End Marker" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="onset" get="1" set="1" type="int" size="1">
			<digest>
				Onset-Based Slicing
			</digest>
			<description>
				Toggles the ability to avoid trimming notes, and
				only consider notes whose onset falls within the cut region,
				and output them entirely. Defaults to 0.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Onset-Based Slicing" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="cage.join" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (llll)">
			<description>
				Original roll.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				Sliced rolls.
			</description>
		</entry>
	</misc>

</c74object>