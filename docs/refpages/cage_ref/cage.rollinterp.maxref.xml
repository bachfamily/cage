<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="cage.rollinterp" module="cage" kind="patcher">

	<digest>
		Interpolate two <o>bach.roll</o> objects
	</digest>

	<description>
		Perform crossfades between two <o>bach.roll</o> objects.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">cageproject</metadata>
		<metadata name="tag">cage</metadata>
		<metadata name="tag">cage scores</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Interpolation function or coefficient
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				Gathered syntax of initial <o>bach.roll</o>
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="2" type="INLET_TYPE">
			<digest>
				Gathered syntax of final <o>bach.roll</o>
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				Gathered syntax of interpolated <o>bach.roll</o>
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="float">
			<arglist />
			<digest>
				Set interpolation factor and output interpolation
			</digest>
			<description>
				A single <m>float</m> coming in the first inlet, expected
				to be from 0 to 1, is interpreted as a static crossfade factor between the two
				<o>bach.roll</o> objects, 0 meaning: take
				initial <o>bach.roll</o> content, 1 meaning: take final <o>bach.roll</o> content,
				and any number in between is the amount of crossfade between them.
				Differently from <m>list</m> message, the amount of crossfade is fixed for
				all the duration of the musical content.
				The interpolated <o>bach.roll</o> is then output in gathered syntax.
			</description>
		</method>
		<method name="list">
			<arglist />
			<digest>
				Set interpolation function and output interpolation
			</digest>
			<description>
				A <m>list</m> in the first inlet is expected to contain the
				interlaced X Y values of a breakpoint function, whose domain is the temporal
				axis (in milliseconds) and whose range is from 0 to 1, 0 meaning: take
				initial <o>bach.roll</o> content, 1 meaning: take final <o>bach.roll</o> content,
				and any number in between is the amount of crossfade between them.
				The interpolated <o>bach.roll</o> is then output in gathered syntax.
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				Set syntax of initial or final <o>bach.roll</o>
			</digest>
			<description>
				An <m>llll</m> in the second inlet is expected to contain
				the gathered syntax of the initial <o>bach.roll</o>. <br />
				An <m>llll</m> in the third inlet is expected to contain the gathered syntax
				of the final <o>bach.roll</o>. <br />
				An <m>llll</m> in the first inlet is converted into a <m>list</m>.
				If the initial <o>bach.roll</o> gathered syntax contain header information,
				such header is used for the output <o>bach.roll</o>, otherwise
				no header information will be output.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="algorithm" get="1" set="1" type="int" size="1">
			<digest>
				Interpolation Algorithm
			</digest>
			<description>
				Sets the algorithm for the interpolation: <br />
				- <b>Random Retaining</b> (default): the algorithm randomly retains
				notes during the crossfade, according to the interpolation function or coefficient,
				interpreted as probability; <br />
				- <b>Change Velocities</b>: the algorithm always retains
				all the notes during the crossfade and modifies their velocities instead,
				according to the interpolation function or coefficient.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Interpolation Algorithm" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the following: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message.
				To keep the representation invertible (i.e., to allow a bach object receiving a text-format llll to interpret it exactly as if it was native format,
				except for the size limitation), some specific kinds of symbols are preceded by a backtick: namely, symbols containing parens, or containing textual
				representations of numbers or pitches, or beginning with a backtick, plus the symbols "null" and "nil" (distinct from the reserved words
				"null" and "nil" representing the empty list and the empty sublist) are preceded by a backtick. Moreover, the symbols "int", "float" or "list"
				are preceded by a backtick only if they are the first element of an llll, to distinguish them from the corresponding reserved messages of Max. <br />
				<m>m</m>: 'max' output: mostly equivalent to the <t> specifier, but no symbol is backticket except "int", "float" and "list" at the beginning of an llll.
				It is important to notice that, differently from text-format lllls proper, Max-format lllls might not be invertible even if they do not reach the size
				limit for Max message. This means that a bach object receiving a Max-format llll output from another bach object might interpret it differently
				from the original, or in some cases might even reject it. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed.
				Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="velthresh" get="1" set="1" type="float" size="1">
			<digest>
				Velocity Threshold
			</digest>
			<description>
				Sets a minimum velocity for the notes to be output
				during crossfades (only for "Change Velocities" algorithm type, see
				<m>algorithm</m> attribute). Defaults to 20.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Velocity Threshold" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		Two algorithms are available: the first algorithm randomly retains
		notes during the crossfade (according to the interpolation curve,
		interpreted as probability); the second algorithm always retains
		all the notes during the crossfade and modifies their velocities instead.
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="bach.roll" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (float/list)">
			<description>
				Interpolation function or coefficient.
			</description>
		</entry>
		<entry name ="Inlet 2 (llll)">
			<description>
				Gathered syntax of initial <o>bach.roll</o>.
			</description>
		</entry>
		<entry name ="Inlet 3 (llll)">
			<description>
				Gathered syntax of final <o>bach.roll</o>.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				Gathered syntax of interpolated <o>bach.roll</o>.
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		Two algorithms are available: the first algorithm randomly retains
		notes during the crossfade (according to the interpolation curve,
		interpreted as probability); the second algorithm always retains
		all the notes during the crossfade and modifies their velocities instead.
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
interpolate, score, crossfade, random, probability, modify, velocity, threshold.
			</description>
		</entry>
	</misc>

</c74object>