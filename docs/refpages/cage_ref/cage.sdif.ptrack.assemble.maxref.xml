<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="cage.sdif.ptrack.assemble" module="cage" kind="patcher">

	<digest>
		Assemble partials into a partial tracking SDIF llll
	</digest>

	<description>
		Pack the partial-wise separate parameters of a partial tracking SDIF analysis
		into a SDIF file in llll form.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">cageproject</metadata>
		<metadata name="tag">cage</metadata>
		<metadata name="tag">cage SDIF</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Stream IDs
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				Partials
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				SDIF analysis as llll
			</digest>
			<description>
				The SDIF analysis containing partial tracking information, as the one
				received by <o>bach.writesdif</o>.
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Output last analysis information
			</digest>
			<description>
				Output the information obtained from the most recently input <m>llll</m>s.
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				Assemble SDIF analysis information
			</digest>
			<description>
				An <m>llll</m> in the second inlet expects an llll containing the stream-wise and partial-wise partial
				tracking information in the following form: an llll for each stream, and then an llll for each partial, containing in turn
				an llll for each peak inside the partial, containing onset, frequency, amplitude and phase.
				An <m>llll</m> in the first inlet expects the stream IDs, and will trigger the output of the assemble SDIF analysis
				information in llll form, as the one receivable by <o>bach.writesdif</o>.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="noteoff" get="1" set="1" type="int" size="1">
			<digest>
				Import Note Off
			</digest>
			<description>
				Toggles the ability to expect note-off information as last peak of each partial.
				If this is active, such peak will the be discarded in the assembled information.
				Default is 0 (off).
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Import Note Off" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the followings: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed. Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="bach.writesdif" />
		<seealso name="cage.sdif.ptrack.resolve" />
		<seealso name="cage.sdif.ptrack.pack" />
		<seealso name="cage.sdif.ptrack.toroll" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (llll)">
			<description>
				Stream IDs.
			</description>
		</entry>
		<entry name ="Inlet 2 (llll)">
			<description>
				Partials.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				SDIF analysis as llll.
				The SDIF analysis containing partial tracking information, as the one
				received by <o>bach.writesdif</o>.
			</description>
		</entry>
	</misc>

</c74object>