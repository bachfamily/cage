<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="cage.join" module="cage" kind="patcher">

	<digest>
		Join rolls
	</digest>

	<description>
		Concatenates a sequence of <o>bach.roll</o> (possibly glueing boundary notes) or <o>bach.score</o> together
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">cageproject</metadata>
		<metadata name="tag">cage</metadata>
		<metadata name="tag">cage scores</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Original Scores
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				Concatenated Score
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="junction_points" optional="1" type="llll">
			<digest>
				Junction points
			</digest>
			<description>
				For <o>bach.roll</o>s, the optional argument sets the initial value for the junction points (default: null).
				Also see <m>llll</m> method to know more.
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Output concatenated score
			</digest>
			<description>
				Outputs result of the last concatenation.
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				Join scores
			</digest>
			<description>
				An <m>llll</m> in the first inlet is considered as a wrapped list of gathered syntax of the <o>bach.roll</o>s or
				<o>bach.scores</o>s,
				in the form: <b>(<m>ROLL_OR_SCORE1</m>) (<m>ROLL_OR_SCORE2</m>)...</b>.
				All the rolls or scores are glued together to form a single <o>bach.roll</o> or <o>bach.score</o> object, whose gathered syntax is output through
				the outlet.
				The output header content is the same as the header content of the first input (except for markers, all preserved). <br />
				For <o>bach.roll</o>,
				an <m>llll</m> in the second inlet sets the time instants at which the roll content has to be joined (also see the
				<m>llll</m> method for <o>cage.slice</o>).
				If such <m>llll</m> is <b>null</b> (default), the last marker of each of the incoming rolls (if any) will be used as
				junction points. If no marker exist, the end of the score is used.
				For <o>bach.score</o> measure are simply concatenated.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="keepend" get="1" set="1" type="int" size="1">
			<digest>
				Keep End Markers
			</digest>
			<description>
				For <o>bach.roll</o>s, toggles the ability to keep the markers whose label is "end"
				(most likely created via <o>cage.slice</o>). Defaults to 0 (i.e.
				all markers are kept, except for the ones named "end").
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Keep End Markers" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		<o>cage.join</o> performs the inverse operation of <o>cage.slice</o>, and is designed
		to communicate with it, provided one sets the <m>endmarker</m> attribute of this latter to 1.
		It also works with <o>bach.score</o>, concatenating their measures
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="cage.slice" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (llll)">
			<description>
				Original Scores.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				Concatenated Score.
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		<o>cage.join</o> performs the inverse operation of <o>cage.slice</o>, and is designed
		to communicate with it, provided one sets the <m>endmarker</m> attribute of this latter to 1.
		It also works with <o>bach.score</o>, concatenating their measures
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
join, glue, chunk, segment, roll, together, concatenate, juxtapose, measure, score.
			</description>
		</entry>
	</misc>

</c74object>