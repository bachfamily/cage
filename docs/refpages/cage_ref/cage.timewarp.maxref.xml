<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="cage.timewarp" module="cage" kind="patcher">

	<digest>
		Perform temporal distortion
	</digest>

	<description>
		<o>cage.timewarp</o> can perform a temporal distortion of a roll
		based upon a function (through a lambda loop) or a set of markers.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">cageproject</metadata>
		<metadata name="tag">cage</metadata>
		<metadata name="tag">cage transformation</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Roll to distort temporally
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				Position / speed (lambda)
			</digest>
			<description>
				According to the <m>order</m> attribute,
				the lambda inlet expects positions or speeds.
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				Resulting roll
			</digest>
			<description>
			</description>
		</outlet>
		<outlet id="1" type="INLET_TYPE">
			<digest>
				Position (lambda)
			</digest>
			<description>
				The lambda outlet outputs time positions in the original roll.
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				In first inlet: Recalculate
			</digest>
			<description>
				A <m>bang</m> in the first inlet causes the temporal distortion
				to be recalculated, according
				to the most recently received data and the optional lambda loop.
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				In first inlet: roll to distort temporally
			</digest>
			<description>
				The first inlet of <o>cage.timewarp</o> accepts
				the contents of the gathered syntax of a <o>bach.roll</o> object,
				which will be temporally distorted according either to a lambda loop,
				or its own markers which will be respaced equally in time.
			</description>
		</method>
		<method name="number">
			<arglist />
			<digest>
				In second inlet: position or speed (lambda)
			</digest>
			<description>
				The second outlet of <o>bach.timewarp</o> outputs
				positions in the roll, which a lambda loop can use
				to re-inject new positions corresponding to the original ones,
				or instantaneous speeds with respect to the original speed
				(e.g., a speed of 2 will mean that at that position
				the contents of the warped roll will be twice as fast as the original),
				according to the value of the <m>order</m> attribute.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="normalize" get="1" set="1" type="int" size="1">
			<digest>
				Time Coordinate Is Between 0 And 1
			</digest>
			<description>
				Toggles the ability to normalize the time coordinate
				between 0 (beginninng of score) and 1 (end of score).
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Time Coordinate Is Between 0 And 1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="order" get="1" set="1" type="int" size="1">
			<digest>
				Order
			</digest>
			<description>
				When the <m>trim</m> attribute is set to 0 (default),
				the lambda inlet expects the new time position value corresponding
				to each original position value that is output from the lambda outlet
				- that is, the function computed in the lambda loop has time on both axes.
				When it is set to 1, the lambda inlet expects the instantaneous speed
				(with respect to the original speed) corresponding to each original position
				that is output from the lambda outlet - that is, the function computed in
				the lambda loop has time on the X axis and speed on the Y axis.
				If no lambda function is present, the <m>trim</m> attribute is ignored.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Order" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="sampling" get="1" set="1" type="int" size="1">
			<digest>
				Sampling
			</digest>
			<description>
				The <m>sampling</m> attribute is only relevant when <m>order</m>
				is set to 1. In this case, it defines the sampling rate (in samples per second)
				for the numerical integration of the speed function. A higher sampling rate
				will result in better precision, but also a higher computational cost.
				The default is 50 samples per second.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Sampling" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="cage.agogics" />
		<seealso name="cage.timestretch" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (llll)">
			<description>
				Roll to distort temporally.
			</description>
		</entry>
		<entry name ="Inlet 2 (number)">
			<description>
				Position / speed (lambda).
				According to the <m>order</m> attribute,
				the lambda inlet expects positions or speeds.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				Resulting roll.
			</description>
		</entry>
		<entry name ="Outlet 2 (float)">
			<description>
				Position (lambda).
				The lambda outlet outputs time positions in the original roll.
			</description>
		</entry>
	</misc>

</c74object>