<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="cage.scale" module="cage" kind="patcher">

	<digest>
		Create a scale
	</digest>

	<description>
		Outputs the notes forming a given scale, within a certain
		pitch range.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">cageproject</metadata>
		<metadata name="tag">cage</metadata>
		<metadata name="tag">cage generation</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Lower bound
			</digest>
			<description>
				The lower bound can be set either as a cents value or a pitch.
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				Upper bound
			</digest>
			<description>
				The upper bound can be set either as a cents value or a pitch.
			</description>
		</inlet>
		<inlet id="2" type="INLET_TYPE">
			<digest>
				Scale type or pattern
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				Cents
			</digest>
			<description>
				The plain llll of cents of the notes composing the scale.
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="lower_bound" optional="1" type="number/pitch">
			<digest>
				Lower bound
			</digest>
			<description>
				The first optional argument sets the initial lower bound for the scale (in cents or pitch)
			</description>
		</objarg>
		<objarg name="upper_bound" optional="1" type="number/pitch">
			<digest>
				Upper bound
			</digest>
			<description>
				The second optional argument sets the initial upper bound for the scale (in cents or pitch)
			</description>
		</objarg>
		<objarg name="chord_type_or_pattern" optional="1" type="symbol/llll">
			<digest>
				Chord type or pattern
			</digest>
			<description>
				The third optional arguments sets the initial scale type (if it is a symbol)
				or the explicit scale pattern (if it is an llll). See the <m>symbol</m> and <m>llll</m> methods
				to know more.
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Output scale
			</digest>
			<description>
				Output the scale obtained from the most recently received input data.
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				Function depends on inlet
			</digest>
			<description>
				An <m>llll</m> in the first or second inlet is expected to be a single number
				(working exactly like the <m>number</m> message) or a note name
				(working exactly like the <m>symbol</m> message). <br />
				An llll in the third inlet, can either be a single symbol (working like the
				<m>symbol</m> message), or a pattern of intervals (in cents or in pitches) defining the scale.
				For instance, <b>100 200 100 200 100 200 100 200</b> builds the semitone-tone octophonic scale
				This pattern starts from a given base note, set via the <m>base</m> attribute.
				For instance, if the <m>base</m> note is a G, this scale would yield: G, Ab, Bb, B, C#, D, E, F, G, Ab...
			</description>
		</method>
		<method name="number">
			<arglist />
			<digest>
				Set range boundary, output result
			</digest>
			<description>
				A number in the first inlet sets the lower bound
				for the scale range, and outputs the scale as a plain llll of midicents. <br />
				A number in the second inlet sets the upper bound for the scale.
			</description>
		</method>
		<method name="symbol">
			<arglist />
			<digest>
				Set range boundary or scale name, output result
			</digest>
			<description>
				A symbol in the first inlet is expected to be the note name of the lower bound
				for the scale range; the scale is then output as a plain llll of midicents. <br />
				A symbol in the second inlet is expected to be the note name of the upper bound for the scale. <br />
				A symbol in the third inlet is interpreted as a scale name, such as <b>CM</b>
				or <b>F#m</b>. Each scale name is composed by the juxtaposition of the note name (in
				anglosaxon style, e.g. <b>C</b>, <b>Fb</b>...) and a suffix, determining the scale type:
				either <b>M</b> (major) or <b>m</b> (minor). Any other scale can be obtained by
				setting a custom pattern (see the <m>llll</m> method).
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="base" get="1" set="1" type="atom" size="1">
			<digest>
				Base Note for Custom Scale
			</digest>
			<description>
				Sets the base note (in pitch or cents) for custom scale.
				Scales defined by an llll pattern (see <m>llll</m> method) start from a given
				base note, set via this attribute, which can either be a number (identifying
				the midicents of the base note) or a symbol (identifying the note name, in
				either latin or anglosaxon syntax).
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Base Note for Custom Scale" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		The scale can be defined either via a chord symbol (such
		as <b>CM</b> or <b>Fmaj7</b>) or via explicit midicent
		pattern (such as <b>100 200 100 200 100 200 100 200</b>). See the
		<m>llll</m> method in third inlet to know more.
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="cage.arpeggio" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (number/pitch)">
			<description>
				Lower bound.
				The lower bound can be set either as a cents value or a pitch.
			</description>
		</entry>
		<entry name ="Inlet 2 (number/pitch)">
			<description>
				Upper bound.
				The upper bound can be set either as a cents value or a pitch.
			</description>
		</entry>
		<entry name ="Inlet 3 (symbol/llll)">
			<description>
				Scale type or pattern.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				Cents.
				The plain llll of cents of the notes composing the scale.
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		The scale can be defined either via a chord symbol (such
		as <b>CM</b> or <b>Fmaj7</b>) or via explicit midicent
		pattern (such as <b>100 200 100 200 100 200 100 200</b>). See the
		<m>llll</m> method in third inlet to know more.
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
scale, generate, name, pattern, repeat, chord, range, pitch, note.
			</description>
		</entry>
	</misc>

</c74object>