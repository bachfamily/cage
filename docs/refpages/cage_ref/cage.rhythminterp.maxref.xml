<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="cage.rhythminterp" module="cage" kind="patcher">

	<digest>
		Interpolate between chords
	</digest>

	<description>
		<o>cage.rhythminterp</o> interpolates between any number of chords,
		by creating additional chord notes when needed.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">cageproject</metadata>
		<metadata name="tag">cage</metadata>
		<metadata name="tag">cage transformation</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Interpolation Weights
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				Contributing Onsets
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="2" type="INLET_TYPE">
			<digest>
				Contributing Weights
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				Interpolated Onsets
			</digest>
			<description>
			</description>
		</outlet>
		<outlet id="1" type="INLET_TYPE">
			<digest>
				Interpolated Durations
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Output interpolated rhythm
			</digest>
			<description>
				Output the rhythm obtained from the most recently received input data.
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				Function depends on inlet
			</digest>
			<description>
				An <m>llll</m> in the first inlet is interpreted
				as a list of interpolation weights to be assigned
				to the onset/duration couples received in the second and third inlets.
				The weights are normalized so as that their sum always equals 1. <br />
				An <m>llll</m> in the second inlet must be composed of sublists of onsets.
				An <m>llll</m> in the third inlet must be composed of sublists of durations.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="epsilon" get="1" set="1" type="int_array" size="0">
			<digest>
				Epsilon
			</digest>
			<description>
				The <m>epsilon</m> attribute sets the minimum
				onset and duration distances (in milliseconds)
				for two notes of the resulting rhythm to be considered duplicates.
				If the <m>thin</m> attribute is not active, <m>epsilon</m> is ignored.
				The default is <b>10 10</b>.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Epsilon" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="mode" get="1" set="1" type="int" size="1">
			<digest>
				Mode
			</digest>
			<description>
				If the <m>mode</m> attribute is set to 0,
				interpolating between rhythms with different numbers of notes
				may produce a rhythm with more notes than any of its contributors.
				If it is set to 1, the number of notes of the resulting rhythm
				is always limited to the number of notes of the largest contributor.
				The default is 0.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Mode" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the following: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message.
				To keep the representation invertible (i.e., to allow a bach object receiving a text-format llll to interpret it exactly as if it was native format,
				except for the size limitation), some specific kinds of symbols are preceded by a backtick: namely, symbols containing parens, or containing textual
				representations of numbers or pitches, or beginning with a backtick, plus the symbols "null" and "nil" (distinct from the reserved words
				"null" and "nil" representing the empty list and the empty sublist) are preceded by a backtick. Moreover, the symbols "int", "float" or "list"
				are preceded by a backtick only if they are the first element of an llll, to distinguish them from the corresponding reserved messages of Max. <br />
				<m>m</m>: 'max' output: mostly equivalent to the <t> specifier, but no symbol is backticket except "int", "float" and "list" at the beginning of an llll.
				It is important to notice that, differently from text-format lllls proper, Max-format lllls might not be invertible even if they do not reach the size
				limit for Max message. This means that a bach object receiving a Max-format llll output from another bach object might interpret it differently
				from the original, or in some cases might even reject it. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed.
				Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="thin" get="1" set="1" type="int" size="1">
			<digest>
				Thin
			</digest>
			<description>
				If the <m>thin</m> attribute is set to 1 (default),
				duplicate notes in the resulting rhythm,
				defined according to the <m>epsilon</m> attribute, will be removed.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Thin" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		<o>cage.rhythminterp</o> is conceived to work in conjunction with <o>nodes</o>.
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="cage.chordinterp" />
		<seealso name="cage.fm" />
		<seealso name="cage.rm" />
		<seealso name="cage.rollinterp" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (llll)">
			<description>
				Interpolation Weights.
			</description>
		</entry>
		<entry name ="Inlet 2 (llll)">
			<description>
				Contributing Onsets.
			</description>
		</entry>
		<entry name ="Inlet 3 (llll)">
			<description>
				Contributing Weights.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				Interpolated Onsets.
			</description>
		</entry>
		<entry name ="Outlet 2 (llll)">
			<description>
				Interpolated Durations.
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		<o>cage.rhythminterp</o> is conceived to work in conjunction with <o>nodes</o>.
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
rhythm, interpolate, chord.
			</description>
		</entry>
	</misc>

</c74object>