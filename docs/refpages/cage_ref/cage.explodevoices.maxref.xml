<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="cage.explodevoices" module="cage" kind="patcher">

	<digest>
		Route chords to different voices
	</digest>

	<description>
		Routes the chords of a <o>bach.roll</o> or <o>bach.score</o>
		to different voices depending on some slot content.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">cageproject</metadata>
		<metadata name="tag">cage</metadata>
		<metadata name="tag">cage scores</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Gathered syntax of original <o>bach.roll</o> or <o>bach.score</o>
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				Gathered syntax of exploded <o>bach.roll</o> or <o>bach.score</o>
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="slot" optional="1" type="int">
			<digest>
				Slot number
			</digest>
			<description>
				Sets the initial number of the slot (of type integer) containing the information about
				the voice routing. Defaults to 1.
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Output result
			</digest>
			<description>
				Output the result obtained from the most recently received input data.
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				Route chords, output messages
			</digest>
			<description>
				An <m>llll</m> in the first inlet is expected to contain the gathered syntax of the
				whole <o>bach.roll</o> or <o>bach.score</o> (e.g. retrieven via a <m>dump</m> or <m>dump body</m> message).
				Chords are then routed to the voice number contained in a given slot, set via the <m>slot</m> attribute.
				Such slot is expected to be of type integer, and to contain the number of the voice to which chords must be
				routed. The outlet of <o>cage.explodevoices</o> must be linked with a new <o>bach.roll</o> or <o>bach.score</o>.
				A <m>numvoices</m> message is then sent to proprely change the number of voices depending on the original data,
				and then an llll containing the gathered syntax of the whole exploded notation object is output.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the following: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message.
				To keep the representation invertible (i.e., to allow a bach object receiving a text-format llll to interpret it exactly as if it was native format,
				except for the size limitation), some specific kinds of symbols are preceded by a backtick: namely, symbols containing parens, or containing textual
				representations of numbers or pitches, or beginning with a backtick, plus the symbols "null" and "nil" (distinct from the reserved words
				"null" and "nil" representing the empty list and the empty sublist) are preceded by a backtick. Moreover, the symbols "int", "float" or "list"
				are preceded by a backtick only if they are the first element of an llll, to distinguish them from the corresponding reserved messages of Max. <br />
				<m>m</m>: 'max' output: mostly equivalent to the <t> specifier, but no symbol is backticket except "int", "float" and "list" at the beginning of an llll.
				It is important to notice that, differently from text-format lllls proper, Max-format lllls might not be invertible even if they do not reach the size
				limit for Max message. This means that a bach object receiving a Max-format llll output from another bach object might interpret it differently
				from the original, or in some cases might even reject it. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed.
				Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="slot" get="1" set="1" type="int" size="1">
			<digest>
				Slot Number
			</digest>
			<description>
				Number of the slot (of type integer) containing the information about the
				voice routing. Defaults to 1.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Slot Number" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="cage.remapvoices" />
		<seealso name="bach.combinevoices" />
		<seealso name="bach.roll" />
		<seealso name="bach.score" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (llll)">
			<description>
				Gathered syntax of original <o>bach.roll</o> or <o>bach.score</o>.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				Gathered syntax of exploded <o>bach.roll</o> or <o>bach.score</o>.
			</description>
		</entry>
	</misc>

</c74object>