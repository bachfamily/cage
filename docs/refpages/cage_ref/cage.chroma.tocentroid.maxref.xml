<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="cage.chroma.tocentroid" module="cage" kind="patcher">

	<digest>
		Find tonal centroid of a chroma vector
	</digest>

	<description>
		Computes the tonal centroid transform of a
		chroma vector.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">cageproject</metadata>
		<metadata name="tag">cage</metadata>
		<metadata name="tag">cage set theory</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				The chroma vector
			</digest>
			<description>
				// @copy BACH_DOC_SETTHEORY_PC_AND_PCSET
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				The tonal centroid
			</digest>
			<description>
				// @copy BACH_DOC_CHROMA
				A pitch-class set is a plain collection of pitch-classes. A pitch class is nothing but the representative of a set of pitches.
				Traditionally, it corresponds to the concept of "note", once we abstract it from its octave.
				For instance, the semitonal framework (when the modulo is 12), all the C belong to the same pitch-class
				which will be named 0 = {..., C-1, C0, C1, C2, C3, C4, C5, ...}. The pitch-class 1 will be the one containing all C#'s (or Db's); pitch-class
				2 will contain all D's, and so on. One will use to name pitch class numbers from 0 to the modulo - 1: indeed, with modulo = 12, pitch-class 12 will coincide
				with pitch-class 0 (it'll be the C one octave higher). One can thus think at pitch-classes as equally spaced points on a clock, and transposing
				means rotating them on the clock. A pitch class set is thus represented just by a plain list of pitch classes, such <b>0 4 7</b>, representing the
				C major chord. Notice that this coincides with any other representation such as <b>12 4 19</b> or <b>0 -8 -5</b>, but the canonical form, where numbers
				are from 0 to the modulo-1 is always preferred. Also for pitch-class sets the order of elements is immaterial, and thus
				<b>0 4 7</b> or <b>4 0 7</b> or <b>7 4 0</b> will all represent the same set.
				On the other hand a pitch-class (as an abstract concept) can be used to represent things other than pitches,
				as for instance temporal position in a rhythmic pattern (loop) having a certain number (the modulo) of equally spaced elements.
				<br /> <br />
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="projection_radii" optional="1" type="list">
			<digest>
				Projection radii
			</digest>
			<description>
				Sets the initial projection radii (see <m>list</m> method). Default is <b>1 1 1</b>.
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Output result
			</digest>
			<description>
				Output the result obtained from the most recently received input data.
			</description>
		</method>
		<method name="list">
			<arglist />
			<digest>
				Set projection radii
			</digest>
			<description>
				A <m>list</m> in the right inlet should contain three floats,
				corresponding to the three projections radii (see <m>llll</m> method), respectively
				for: fifths, minor thirds and major thirds. Default is 1, for each space.
				A common choice is also setting 0.5 just for minor thirds.
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				Set chroma, output result
			</digest>
			<description>
				An <m>llll</m> in the first inlet is expected to be the chroma vector whose
				tonal centroid must be computed, computes such centroid and outputs it. <br />
				An <m>llll</m> in the second inlet is converted into a <m>list</m>, setting the
				projection radii (see <m>list</m>). <br /> <br />
				A pitch-class set is a plain collection of pitch-classes. A pitch class is nothing but the representative of a set of pitches.
				Traditionally, it corresponds to the concept of "note", once we abstract it from its octave.
				For instance, the semitonal framework (when the modulo is 12), all the C belong to the same pitch-class
				which will be named 0 = {..., C-1, C0, C1, C2, C3, C4, C5, ...}. The pitch-class 1 will be the one containing all C#'s (or Db's); pitch-class
				2 will contain all D's, and so on. One will use to name pitch class numbers from 0 to the modulo - 1: indeed, with modulo = 12, pitch-class 12 will coincide
				with pitch-class 0 (it'll be the C one octave higher). One can thus think at pitch-classes as equally spaced points on a clock, and transposing
				means rotating them on the clock. A pitch class set is thus represented just by a plain list of pitch classes, such <b>0 4 7</b>, representing the
				C major chord. Notice that this coincides with any other representation such as <b>12 4 19</b> or <b>0 -8 -5</b>, but the canonical form, where numbers
				are from 0 to the modulo-1 is always preferred. Also for pitch-class sets the order of elements is immaterial, and thus
				<b>0 4 7</b> or <b>4 0 7</b> or <b>7 4 0</b> will all represent the same set.
				On the other hand a pitch-class (as an abstract concept) can be used to represent things other than pitches,
				as for instance temporal position in a rhythmic pattern (loop) having a certain number (the modulo) of equally spaced elements.
				<br /> <br />
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		The tonal centroid transform is computed in a similar way as
		Harte and Sandler do in
		http://www.ofai.at/~martin.gasser/papers/oefai-tr-2006-13.pdf
		Essentially, the chroma vector is projected into three spaces:
		one generated by fifths, one generated by minor thirds,
		and one generated by major thirds. <br />
		A pitch-class set is a plain collection of pitch-classes. A pitch class is nothing but the representative of a set of pitches.
		Traditionally, it corresponds to the concept of "note", once we abstract it from its octave.
		For instance, the semitonal framework (when the modulo is 12), all the C belong to the same pitch-class
		which will be named 0 = {..., C-1, C0, C1, C2, C3, C4, C5, ...}. The pitch-class 1 will be the one containing all C#'s (or Db's); pitch-class
		2 will contain all D's, and so on. One will use to name pitch class numbers from 0 to the modulo - 1: indeed, with modulo = 12, pitch-class 12 will coincide
		with pitch-class 0 (it'll be the C one octave higher). One can thus think at pitch-classes as equally spaced points on a clock, and transposing
		means rotating them on the clock. A pitch class set is thus represented just by a plain list of pitch classes, such <b>0 4 7</b>, representing the
		C major chord. Notice that this coincides with any other representation such as <b>12 4 19</b> or <b>0 -8 -5</b>, but the canonical form, where numbers
		are from 0 to the modulo-1 is always preferred. Also for pitch-class sets the order of elements is immaterial, and thus
		<b>0 4 7</b> or <b>4 0 7</b> or <b>7 4 0</b> will all represent the same set.
		On the other hand a pitch-class (as an abstract concept) can be used to represent things other than pitches,
		as for instance temporal position in a rhythmic pattern (loop) having a certain number (the modulo) of equally spaced elements.
		<br /> <br />
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="cage.chroma.fromcentroid" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (llll)">
			<description>
				The chroma vector.
				// @copy BACH_DOC_SETTHEORY_PC_AND_PCSET
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				The tonal centroid.
				// @copy BACH_DOC_CHROMA
				A pitch-class set is a plain collection of pitch-classes. A pitch class is nothing but the representative of a set of pitches.
				Traditionally, it corresponds to the concept of "note", once we abstract it from its octave.
				For instance, the semitonal framework (when the modulo is 12), all the C belong to the same pitch-class
				which will be named 0 = {..., C-1, C0, C1, C2, C3, C4, C5, ...}. The pitch-class 1 will be the one containing all C#'s (or Db's); pitch-class
				2 will contain all D's, and so on. One will use to name pitch class numbers from 0 to the modulo - 1: indeed, with modulo = 12, pitch-class 12 will coincide
				with pitch-class 0 (it'll be the C one octave higher). One can thus think at pitch-classes as equally spaced points on a clock, and transposing
				means rotating them on the clock. A pitch class set is thus represented just by a plain list of pitch classes, such <b>0 4 7</b>, representing the
				C major chord. Notice that this coincides with any other representation such as <b>12 4 19</b> or <b>0 -8 -5</b>, but the canonical form, where numbers
				are from 0 to the modulo-1 is always preferred. Also for pitch-class sets the order of elements is immaterial, and thus
				<b>0 4 7</b> or <b>4 0 7</b> or <b>7 4 0</b> will all represent the same set.
				On the other hand a pitch-class (as an abstract concept) can be used to represent things other than pitches,
				as for instance temporal position in a rhythmic pattern (loop) having a certain number (the modulo) of equally spaced elements.
				<br /> <br />
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		The tonal centroid transform is computed in a similar way as
		Harte and Sandler do in
		http://www.ofai.at/~martin.gasser/papers/oefai-tr-2006-13.pdf
		Essentially, the chroma vector is projected into three spaces:
		one generated by fifths, one generated by minor thirds,
		and one generated by major thirds. <br />
		A pitch-class set is a plain collection of pitch-classes. A pitch class is nothing but the representative of a set of pitches.
		Traditionally, it corresponds to the concept of "note", once we abstract it from its octave.
		For instance, the semitonal framework (when the modulo is 12), all the C belong to the same pitch-class
		which will be named 0 = {..., C-1, C0, C1, C2, C3, C4, C5, ...}. The pitch-class 1 will be the one containing all C#'s (or Db's); pitch-class
		2 will contain all D's, and so on. One will use to name pitch class numbers from 0 to the modulo - 1: indeed, with modulo = 12, pitch-class 12 will coincide
		with pitch-class 0 (it'll be the C one octave higher). One can thus think at pitch-classes as equally spaced points on a clock, and transposing
		means rotating them on the clock. A pitch class set is thus represented just by a plain list of pitch classes, such <b>0 4 7</b>, representing the
		C major chord. Notice that this coincides with any other representation such as <b>12 4 19</b> or <b>0 -8 -5</b>, but the canonical form, where numbers
		are from 0 to the modulo-1 is always preferred. Also for pitch-class sets the order of elements is immaterial, and thus
		<b>0 4 7</b> or <b>4 0 7</b> or <b>7 4 0</b> will all represent the same set.
		On the other hand a pitch-class (as an abstract concept) can be used to represent things other than pitches,
		as for instance temporal position in a rhythmic pattern (loop) having a certain number (the modulo) of equally spaced elements.
		<br /> <br />
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
chroma, centroid, convert, vector, transform.
			</description>
		</entry>
	</misc>

</c74object>