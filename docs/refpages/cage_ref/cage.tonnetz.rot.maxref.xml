<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="cage.tonnetz.rot" module="cage" kind="patcher">

	<digest>
		Rotate tonnetz coordinates
	</digest>

	<description>
		Rotates the coordinates of a tonnetz of a certain
		number of steps (one step corresponding to a 60 degrees clockwise rotation)
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">cageproject</metadata>
		<metadata name="tag">cage</metadata>
		<metadata name="tag">cage set theory</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Coordinates
			</digest>
			<description>
				The coordinate of a point of the tonnetz is the position of such point in the oblique grid created by the horizontal axis, passing
				for the tonnetz center, and the diagonal axis, at 60° counterclockwise from the horizontal one, again passing for the tonnetz center.
				Coordinates above the center and at right have positive values, below and at left have negative ones. Each point can be uniquely determined
				by the amount of steps one must take rightwards from the center (coordinate 1) and diagonlly upwards at 60° (coordinate 2) in order to
				get to the point.
				<br /> <br />
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				Number of rotation steps
			</digest>
			<description>
				Each step corresponds to a 60 degrees clockwise rotation.
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				Rotated coordinates
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="rotation_steps" optional="1" type="int">
			<digest>
				Rotation steps
			</digest>
			<description>
				Sets the initial rotation steps (see <m>int</m> method). Default is <b>1</b>.
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Output result
			</digest>
			<description>
				Output the result obtained from the most recently received input data.
			</description>
		</method>
		<method name="int">
			<arglist />
			<digest>
				Set number of rotation steps
			</digest>
			<description>
				An <m>int</m> in the right inlet sets the number of rotation steps,
				each corresponding to a 60 degrees clockwise rotation. To rotate counterclockwise, use negative
				numbers.
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				Rotate tonnetz coordinates, output result
			</digest>
			<description>
				An <m>llll</m> in the first inlet is expected to contain a sequence
				of wrapped coordinates, in the form <b>[<m>c1</m> <m>c2</m>] [<m>c1</m> <m>c2</m>]...</b>.
				Such coordinates are all rotated by the number of steps (each step corresponding
				to a 60 degrees clockwise rotation) defined as argument or via the second inlet. Rotations
				are performed with respect to the tonnetz center. <br />
				The coordinate of a point of the tonnetz is the position of such point in the oblique grid created by the horizontal axis, passing
				for the tonnetz center, and the diagonal axis, at 60° counterclockwise from the horizontal one, again passing for the tonnetz center.
				Coordinates above the center and at right have positive values, below and at left have negative ones. Each point can be uniquely determined
				by the amount of steps one must take rightwards from the center (coordinate 1) and diagonlly upwards at 60° (coordinate 2) in order to
				get to the point.
				<br /> <br />
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the following: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message.
				To keep the representation invertible (i.e., to allow a bach object receiving a text-format llll to interpret it exactly as if it was native format,
				except for the size limitation), some specific kinds of symbols are preceded by a backtick: namely, symbols containing parens, or containing textual
				representations of numbers or pitches, or beginning with a backtick, plus the symbols "null" and "nil" (distinct from the reserved words
				"null" and "nil" representing the empty list and the empty sublist) are preceded by a backtick. Moreover, the symbols "int", "float" or "list"
				are preceded by a backtick only if they are the first element of an llll, to distinguish them from the corresponding reserved messages of Max. <br />
				<m>m</m>: 'max' output: mostly equivalent to the "t" specifier, but no symbol is backticket except "int", "float" and "list" at the beginning of an llll.
				It is important to notice that, differently from text-format lllls proper, Max-format lllls might not be invertible even if they do not reach the size
				limit for Max message. This means that a bach object receiving a Max-format llll output from another bach object might interpret it differently
				from the original, or in some cases might even reject it. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed.
				Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		The coordinate of a point of the tonnetz is the position of such point in the oblique grid created by the horizontal axis, passing
		for the tonnetz center, and the diagonal axis, at 60° counterclockwise from the horizontal one, again passing for the tonnetz center.
		Coordinates above the center and at right have positive values, below and at left have negative ones. Each point can be uniquely determined
		by the amount of steps one must take rightwards from the center (coordinate 1) and diagonlly upwards at 60° (coordinate 2) in order to
		get to the point.
		<br /> <br />
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="cage.tonnetz.flip" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (llll)">
			<description>
				Coordinates.
				The coordinate of a point of the tonnetz is the position of such point in the oblique grid created by the horizontal axis, passing
				for the tonnetz center, and the diagonal axis, at 60° counterclockwise from the horizontal one, again passing for the tonnetz center.
				Coordinates above the center and at right have positive values, below and at left have negative ones. Each point can be uniquely determined
				by the amount of steps one must take rightwards from the center (coordinate 1) and diagonlly upwards at 60° (coordinate 2) in order to
				get to the point.
				<br /> <br />
			</description>
		</entry>
		<entry name ="Inlet 2 (int)">
			<description>
				Number of rotation steps.
				Each step corresponds to a 60 degrees clockwise rotation.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				Rotated coordinates.
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		The coordinate of a point of the tonnetz is the position of such point in the oblique grid created by the horizontal axis, passing
		for the tonnetz center, and the diagonal axis, at 60° counterclockwise from the horizontal one, again passing for the tonnetz center.
		Coordinates above the center and at right have positive values, below and at left have negative ones. Each point can be uniquely determined
		by the amount of steps one must take rightwards from the center (coordinate 1) and diagonlly upwards at 60° (coordinate 2) in order to
		get to the point.
		<br /> <br />
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
tonnetz, rotate, coordinate, step, degree, clockwise, counterclockwise.
			</description>
		</entry>
	</misc>

</c74object>