<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="cage.markov.analysis" module="cage" kind="patcher">

	<digest>
		Markov probability transition matrices
	</digest>

	<description>
		Analyzes incoming states and builds Markov probability transition matrices of a given order,
		in sparse form
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">cageproject</metadata>
		<metadata name="tag">cage</metadata>
		<metadata name="tag">cage automata</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Incoming state or bang to output transition matrix
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				Probability transition matrix in sparse form
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="order" optional="1" type="int">
			<digest>
				Order
			</digest>
			<description>
				The optional argument sets the <m>order</m> of the Markov chain.
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Output transition matrix
			</digest>
			<description>
				A <m>bang</m> forces the transition matrix to be output.
				The transition matrix is output in sparse form, i.e. as a list of
				<b>(<m>state1</m> <m>state2</m> ... <m>stateK</m> <m>number_of_occurrences</m>)</b>
				where the number of states correspond to the order of the Markov chain plus one.
			</description>
		</method>
		<method name="clear">
			<arglist />
			<digest>
				Clear all states
			</digest>
			<description>
				Clears the memory for all the recorded states.
			</description>
		</method>
		<method name="int">
			<arglist />
			<digest>
				Receive state
			</digest>
			<description>
				Any element (number, or wrapped llll) will be considered a new state.
				Any llll of length more than 1 will be considered as a sequence of states.
				These states are accounted for, and a transition matrix is constructed (but not output
				unless a <m>bang</m> is received).
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="order" get="1" set="1" type="int" size="1">
			<digest>
				Order
			</digest>
			<description>
				Sets the order of the Markov chain (i.e. the number of memory steps).
				Must be an non-negative integer, and defaults to 1 (Markov chain with 1 step memory).
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Order" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the following: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message. To keep the representation invertible (i.e., to allow a bach object receiving a text-format llll to interpret it exactly as if it was native format, e
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="cage.markov.synthesis" />
		<seealso name="anal" />
		<seealso name="prob" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (int/bang)">
			<description>
				Incoming state or bang to output transition matrix.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				Probability transition matrix in sparse form.
			</description>
		</entry>
	</misc>

</c74object>